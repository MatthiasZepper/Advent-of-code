hello <- 32423
??max
presidents
max(presidents)
?match
?regex
regexec("(?=[^a-z\n]*[a-z])(?=[^A-Z\n]*[A-Z])(?=[^\d\n]*\d)^[\S]{10,64}$","password")
regexec("(?=[^a-z\n]*[a-z])(?=[^A-Z\n]*[A-Z])(?=[^\d\n]*\d)^[\S]{10,64}$","password",perl=TRUE)
regexec("(?=[^a-z\n]*[a-z])(?=[^A-Z\n]*[A-Z])(?=[^\d\n]*\\d)^[\S]{10,64}$","password",perl=TRUE)
regexec("(?=[^a-z\n]*[a-z])(?=[^A-Z\n]*[A-Z])(?=[^\d\n]*)^[\S]{10,64}$","password",perl=TRUE)
regexec("(?=[^a-z\n]*[a-z])(?=[^A-Z\n]*[A-Z])(?=[^.\n]*)^[\S]{10,64}$","password",perl=TRUE)
regexec("?=[^a-z\n]*[a-z])(?=[^A-Z\n]*[A-Z])(?=[^.\n]*)^[\S]{10,64}$","password",perl=TRUE)
regexec("?=[^a-z\n]*[a-z])(?=[^A-Z\n]*[A-Z])(?=[^.\n]*)^[\\S]{10,64}$","password",perl=TRUE)
regexec("[^a-z\n]*[a-z])(?=[^A-Z\n]*[A-Z])(?=[^.\n]*)^[\\S]{10,64}$","password",perl=TRUE)
regexec((?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9]),"password",perl=TRUE)
regexec("(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])","password",perl=TRUE)
regexec("(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])","passWord1!",perl=TRUE)
regexec("(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])","REERpassWord1!",perl=TRUE)
gregexpr("(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])","REERpassWord1!",perl=TRUE)
gregexpr("(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])","passWord1!",perl=TRUE)
gregexpr("(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])","passWord1!")
gregexpr("(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])","passWord1!",perl=TRUE)
gregexpr("(?=[^a-z\n]*[a-z])(?=[^A-Z\n]*[A-Z])(?=[^\d\n]*\d)","passWord1!",perl=TRUE)
gregexpr("(?=[^a-z\n]*[a-z])(?=[^A-Z\n]*[A-Z])(?=[^\\d\n]*\d)","passWord1!",perl=TRUE)
gregexpr("(?=[^a-z\n]*[a-z])(?=[^A-Z\n]*[A-Z])(?=[^\\\d\n]*\d)","passWord1!",perl=TRUE)
gregexpr("(?=[^a-z\n]*[a-z])(?=[^A-Z\n]*[A-Z])(?=[^[:digit:]\n]*\d)","passWord1!",perl=TRUE)
gregexpr("(?=[^a-z\n]*[a-z])(?=[^A-Z\n]*[A-Z])(?=[^[[:digit:]]\n]*\d)","passWord1!",perl=TRUE)
gregexpr("(?=[^a-z\n]*[a-z])(?=[^A-Z\n]*[A-Z])(?=[^[[:digit:]]\n]*[[:digit:]])","passWord1!",perl=TRUE)
gregexpr("(?=[^a-z\n]*[a-z])(?=[^A-Z\n]*[A-Z])(?=[^[:digit:]\n]*[:digit:])","passWord1!",perl=TRUE)
gregexpr("(?=[^a-z\n]*[a-z])(?=[^A-Z\n]*[A-Z])(?=[^[[:digit:]]\n]*[[:digit:]])","passWord1!",perl=TRUE)
gregexpr("(?=[^a-z\n]*[a-z])(?=[^A-Z\n]*[A-Z])(?=[^[[:digit:]]\n]*[[:digit:]])Â¨^.","passWord1!",perl=TRUE)
gregexpr("(?=[^a-z\n]*[a-z])(?=[^A-Z\n]*[A-Z])(?=[^[[:digit:]]\n]*[[:digit:]])^.","passWord1!",perl=TRUE)
gregexpr("(?=[^a-z\n]*[a-z])(?=[^A-Z\n]*[A-Z])(?=[^[[:digit:]]\n]*[[:digit:]]).","passWord1!",perl=TRUE)
gregexpr("(?=[^a-z\n]*[a-z])(?=[^A-Z\n]*[A-Z])(?=[^[[:digit:]]\n]*[[:digit:]])","passWord1!",perl=TRUE)
gregexpr("(?=[^a-z\n]*[a-z])(?=[^A-Z\n]*[A-Z])(?=[^[[:digit:]]\n]*[[:digit:]])^\W","passWord1!",perl=TRUE)
gregexpr("(?=[^a-z\n]*[a-z])(?=[^A-Z\n]*[A-Z])(?=[^[[:digit:]]\n]*[[:digit:]])^\\W","passWord1!",perl=TRUE)
gregexpr("(?=[^a-z\n]*[a-z])(?=[^A-Z\n]*[A-Z])(?=[\\D\n]*\\d)^\\W","passWord1!",perl=TRUE)
gregexpr("(?=[^a-z\n]*[a-z])(?=[^A-Z\n]*[A-Z])(?=[\\D\n]*\\d)^\\S","passWord1!",perl=TRUE)
regexec("(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])","passWord1!",perl=TRUE)
gregexpr("(?=[^a-z\n]*[a-z])(?=[^A-Z\n]*[A-Z])(?=[\\D\n]*\\d)^\\S","passWord1!",perl=TRUE)
gregexpr("(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])","passWord1!",perl=TRUE)
lala <- gregexpr("(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])","passWord1!",perl=TRUE)
names(lala)
classes(lala)
class(lala)
(lala[1])
lala[1]
lala[[1]]
names(lala[[1]])
attributes(lala[[1]])
attributes(lala[[1]][1])
lala[[1]][1]
lala[[1]][2]
lala[[1]][3]
?vapply
?chartr
LETTERS
rev(LETTERS)
chartr(LETTERS,rev(LETTERS),"Coffee and Code talk")
chartr(paste(LETTERS,collapse = ""),paste(rev(LETTERS),collapse = ""),"Coffee and Code talk")
paste(LETTERS,collapse = "")
chartr("ACGT","TGCA")
chartr("ACGT","TGCA","Scilife")
chartr("ACGT","TGCA","Sczzzilife")
chartr("ACGT","TGCA","AGT")
chartr(paste(LETTERS,letters,collapse = ""),paste(rev(LETTERS,letters),collapse = ""),"Coffee and Code talk")
chartr(paste(LETTERS,letters,collapse = ""),paste(rev(c(LETTERS,letters),collapse = ""),"Coffee and Code talk")
chartr(paste(LETTERS,letters,collapse = ""),paste(rev(c(LETTERS,letters)),collapse = ""),"Coffee and Code talk")
chartr(paste(LETTERS,letters,collapse = ""),paste(rev(c(LETTERS,letters)),collapse = ""),"Coffee and Code talk")
chartr(paste(c(LETTERSletters),collapse = ""),paste(rev(c(LETTERS,letters)),collapse = ""),"Coffee and Code talk")
chartr(paste(c(LETTERS,letters),collapse = ""),paste(rev(c(LETTERS,letters)),collapse = ""),"Coffee and Code talk")
chartr(paste(c(LETTERS,letters),collapse = ""),paste(rev(c(LETTERS,letters)),collapse = ""),"Coffee and Code talk at the Scilifelab")
2L
typeof(2L)
typeof(2)
Rprof
Rprof()
Rprof(hello)
Rprof("hello")
str(""hello)
str("hello")
str(data.frame("number"1:4,"value"=1:2))
str(data.frame("number"=1:4,"value"=1:2))
data.frame("number"=1:4,"value"=1:2)
nchar("Ml5V5XVCLotGUmkrBZP1CWEGpwvrniAX")
nchar("eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lZWxqZnNlbGlmanNlbGRmc2Vmc2dzZ2ZzZXNlZmRjZXNmZ3NlZnNlZnNkY2Vjc2NmZXNzZWZzZWdzZ3NmZWZzY2RjZWRlw7Zva2_Dtmpvw7Zrb3VodWtram9qb2tnaGlqb2lrw7Zva2xva2tsa29rbGvDtmZzcmZnc2ZzZWZkc2RmZWRjc2RjZWZzZWZzZWZzZWZzZGVkZGZpamRmZWlsZWZqc2VsaWZqc2VsaWZqc2xkaWlpZGlkaWRpZGZzamVsc2VmanNsZWZqbHNpZWZlZ2hlaWdsc2hoZ2wiLCJpYXQiOjE1MTYyMzkwMjJ9.OwpshMYAgcBaILPKBejWIUWzheyqmgcC9dNvDiIIJMM")
445/4
lalal <- "Hallo"
rev(lalal)
iris
?expand
expand.grid
?expand.grid
expand.grid(colnames(iris))
expand.grid(colnames(iris),colnames(iris))
install.packages("dplyr")
library(dplyr)
iris <- as_tibble(iris)
iris
multipetal <- function(df, n) {
varname <- paste("petal", n , sep=".")
df[[varname]] <- with(df, Petal.Width * n)
df
}
irisbackup <- iris
for(i in 2:5) {
iris <- multipetal(df=iris, n=i)
}
View(iris)
expand.grid(iris$Petal.Width,c(2:5))
knitr::opts_chunk$set(echo = TRUE)
depths <- read.csv("https://adventofcode.com/2021/day/1/input")
depths <- read.csv("http://adventofcode.com/2021/day/1/input")
library ("RCurl")
rawdepths <- getURL("https://adventofcode.com/2021/day/1/input")
depths <- read.csv (text = rawdepths)
summary(depths)
depths <- read.csv("day_1_input.txt")
summary(depths)
class(depths)
depths <- read.delim("day_1_input.txt")[,1]
summary(depths)
diff(depths)
diff(depths)>0
sum'(diff(depths)>0)
sum(diff(depths)>0)
sum(diff(depths)>=0)
diff(depths)>=0
sum(diff(depths)>=0)
sum((diff(depths)>=0))
diff(depths)>=0)
(diff(depths)>=0)
sum(diff(depths)>0)
sum(diff(depths)>0)
knitr::opts_chunk$set(echo = TRUE)
library ("RCurl")
rawdepths <- getURL("https://adventofcode.com/2021/day/1/input")
depths <- read.csv(text = rawdepths,header=FALSE)[,1]
summary(depths)
depths <- read.delim("day_1_input.txt",header=FALSE)[,1]
summary(depths)
sum(diff(depths)>0)
seq_along(depths,3)
seq_along(depths)
rollapply(depths,3,mean)
library("zoo")
rollapply(depths,3,mean)
library("zoo")
sum(diff(rollapply(depths,3,mean))>0)
length(diff(rollapply(depths,3,mean))
)
knitr::opts_chunk$set(echo = TRUE)
course <- read.delim("day_2_input.txt",header=FALSE)
setwd("~/Documents/Coding/R/Advent_of_code_2021/02")
course <- read.delim("day_2_input.txt",header=FALSE)
course <- read.delim("day_2_input.txt",header=FALSE)
head(course)
course <- read.delim("day_2_input.txt",sep=" ",header=FALSE,col.names = c("direction","value"))
course
aggregated_course <- aggregate(value ~ direction, FUN=sum, data=course)
aggregated_course
aggregated_course <- aggregate(value ~ direction, FUN=sum, data=course)
aggregated_course <- aggregate(value ~ direction, FUN=sum, data=course)
print(aggregated_course)
?integer
as.list(aggregated_course)
?colnames
course <- setNames(aggregated_course[,"value"], aggregated_course[,"direction"])
course
course["forward"]*(course["down"]-course["up"])
course["down"]-course["up"]
knitr::opts_chunk$set(echo = TRUE)
course <- read.delim("day_2_input.txt",sep=" ",header=FALSE,col.names = c("direction","value"))
aggregated_course <- aggregate(value ~ direction, FUN=sum, data=course)
print(aggregated_course)
course_new <- setNames(aggregated_course[,"value"], aggregated_course[,"direction"])
print(course)
course_new["forward"]*(course_new["down"]-course_new["up"])
library("zoo")
sum(diff(rollapply(depths,3,mean))>0)
course <- read.delim("day_2_input.txt",sep=" ",header=FALSE,col.names = c("direction","value"))
print(head(course))
aggregated_course <- aggregate(value ~ direction, FUN=sum, data=course)
print(aggregated_course)
course_new <- setNames(aggregated_course[,"value"], aggregated_course[,"direction"])
print(course_new)
course_new["forward"]*(course_new["down"]-course_new["up"])
head(course)
course[1:20,]
neg_index <- course[,"direction"]=="up"
course[,"value"] <- course[,"value"]
neg_index <- course[,"direction"]=="up"
course[neg_index,"value"] <- course[neg_index,"value"]*-1
course[1:20,]
course[,"aim"] <- course[,"value"]
fwd_index <- course[,"direction"]=="forward"
course[fwd_index,"aim"] <- 0
course[1:20,]
course[,"aim"] <- cumsum(course[,"aim"])
course[1:20,]
course[fwd_index,"depth"] <- course[fwd_index,"value"] * course[fwd_index,"aim"]
course[1:20,]
sum(course[fwd_index,"value"]) * sum(course[fwd_index,"depth"],na.rm=TRUE)
